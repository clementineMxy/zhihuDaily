{"ast":null,"code":"var _jsxFileName = \"/Users/clementine/Desktop/02\\u77E5\\u4E4E\\u65E5\\u62A5/zhihu/src/components/ButtonAgain.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from 'antd-mobile';\n\n// 向服务器发请求，loading效果出现到消失的<Button>按钮\n// 调用<ButtonAgain>不用传递loading属性\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonAgain = function ButtonAgain(props) {\n  _s();\n  /* 将其他页面调用<ButtonAgain>传递的props传递给<Button> */\n  let options = {\n    ...props\n  };\n  let {\n    children,\n    onClick: handle\n  } = options;\n  delete options.children;\n\n  /* 状态 */\n  let [loading, setLoading] = useState(false);\n  const clickHandle = async () => {\n    setLoading(true);\n    //try catch包裹，失败也不会阻塞下面代码执行\n    try {\n      await handle();\n    } catch (_) {}\n    setLoading(false);\n  };\n  if (handle) {\n    options.onClick = clickHandle;\n  }\n  return /*#__PURE__*/_jsxDEV(Button, {\n    ...options,\n    loading: loading,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};\n_s(ButtonAgain, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = ButtonAgain;\nexport default ButtonAgain;\nvar _c;\n$RefreshReg$(_c, \"ButtonAgain\");","map":{"version":3,"names":["React","useState","Button","ButtonAgain","props","options","children","onClick","handle","loading","setLoading","clickHandle","_"],"sources":["/Users/clementine/Desktop/02知乎日报/zhihu/src/components/ButtonAgain.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from 'antd-mobile';\n\n// 向服务器发请求，loading效果出现到消失的<Button>按钮\n// 调用<ButtonAgain>不用传递loading属性\nconst ButtonAgain = function ButtonAgain(props) {\n    /* 将其他页面调用<ButtonAgain>传递的props传递给<Button> */\n    let options = { ...props };\n    let { children, onClick: handle } = options;\n    delete options.children;\n\n    /* 状态 */\n    let [loading, setLoading] = useState(false);\n    const clickHandle = async () => {\n        setLoading(true);\n        //try catch包裹，失败也不会阻塞下面代码执行\n        try {\n            await handle();\n        } catch (_) { }\n        setLoading(false);\n    };\n    if (handle) {\n        options.onClick = clickHandle;\n    }\n\n    return <Button {...options} loading={loading}>\n        {children}\n    </Button>;\n};\nexport default ButtonAgain;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,aAAa;;AAEpC;AACA;AAAA;AACA,MAAMC,WAAW,GAAG,SAASA,WAAW,CAACC,KAAK,EAAE;EAAA;EAC5C;EACA,IAAIC,OAAO,GAAG;IAAE,GAAGD;EAAM,CAAC;EAC1B,IAAI;IAAEE,QAAQ;IAAEC,OAAO,EAAEC;EAAO,CAAC,GAAGH,OAAO;EAC3C,OAAOA,OAAO,CAACC,QAAQ;;EAEvB;EACA,IAAI,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMU,WAAW,GAAG,YAAY;IAC5BD,UAAU,CAAC,IAAI,CAAC;IAChB;IACA,IAAI;MACA,MAAMF,MAAM,EAAE;IAClB,CAAC,CAAC,OAAOI,CAAC,EAAE,CAAE;IACdF,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EACD,IAAIF,MAAM,EAAE;IACRH,OAAO,CAACE,OAAO,GAAGI,WAAW;EACjC;EAEA,oBAAO,QAAC,MAAM;IAAA,GAAKN,OAAO;IAAE,OAAO,EAAEI,OAAQ;IAAA,UACxCH;EAAQ;IAAA;IAAA;IAAA;EAAA,QACJ;AACb,CAAC;AAAC,GAvBIH,WAAW;AAAA,KAAXA,WAAW;AAwBjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}