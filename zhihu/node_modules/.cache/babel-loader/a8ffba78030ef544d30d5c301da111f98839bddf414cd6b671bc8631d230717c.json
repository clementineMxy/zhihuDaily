{"ast":null,"code":"var _jsxFileName = \"/Users/clementine/Desktop/02\\u77E5\\u4E4E\\u65E5\\u62A5/zhihu/src/components/HomeHead.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useEffect } from \"react\";\n// 导入图片 使用时src={timg} 打包后img src直接是base64码\nimport timg from '../assets/images/timg.jpg';\nimport './HomeHead.less';\nimport { connect } from 'react-redux';\nimport action from '../store/action';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeHead = function HomeHead(props) {\n  _s();\n  const navigate = useNavigate();\n\n  /* 计算时间中的月和日 */\n  let {\n    today,\n    info,\n    queryUserInfoAsync\n  } = props;\n  // useCallback缓存的是一个函数\n  // useCallback第一个参数是一个回调函数，useCallback会缓存这个函数，返回缓存的回调函数\n  // useCallback第二个参数是依赖项，只有当依赖项改变时，才会重新创建这个函数\n  // 例子：向子组件传递一个函数，在父组件每次re-render的时候，函数会重新创建新的，这会导致使用这个函数的子组件也re-render，但这是不必要的，可以用useCallback来解决。\n  // useMemo 缓存的是计算结果\n  // useMemo 第一个参数是一个函数，返回值用于产生保存值。 \n  // useMemo 第二个参数是一个数组，作为 dep 依赖项，数组里面的依赖项发生变化，重新执行第一个函数，产生新的值。\n  // 例子：减少不必要的 DOM 循环，限定当且仅当items改变的时候才更新此items，避免items重新循环\n  let time = useMemo(() => {\n    let [, month, day] = today.match(/^\\d{4}(\\d{2})(\\d{2})$/),\n      area = ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'];\n    return {\n      // 单元运算符 + 可以把数字字符串转换成数值\n      month: area[+month] + '月',\n      day\n    };\n  }, [today]);\n\n  // 第一次渲染完:如果info中没有信息,我们尝试派发一次,获取到登陆者信息\n  useEffect(() => {\n    if (!info) {\n      queryUserInfoAsync();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"home-head-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: time.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: time.month\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"\\u77E5\\u4E4E\\u65E5\\u62A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"picture\",\n      onClick: () => {\n        navigate('/personal');\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: info ? info.pic : timg,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n};\n_s(HomeHead, \"zwHfAe34gifFrznPtoOapYAHNWQ=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeHead;\nexport default connect(state => state.base,\n// 一个对象，正好是{key:function}的形式，可以从props直接获取函数名\naction.base)(HomeHead);\nvar _c;\n$RefreshReg$(_c, \"HomeHead\");","map":{"version":3,"names":["React","useMemo","useEffect","timg","connect","action","useNavigate","HomeHead","props","navigate","today","info","queryUserInfoAsync","time","month","day","match","area","pic","state","base"],"sources":["/Users/clementine/Desktop/02知乎日报/zhihu/src/components/HomeHead.jsx"],"sourcesContent":["import React, { useMemo, useEffect } from \"react\";\n// 导入图片 使用时src={timg} 打包后img src直接是base64码\nimport timg from '../assets/images/timg.jpg';\nimport './HomeHead.less';\nimport { connect } from 'react-redux';\nimport action from '../store/action';\nimport { useNavigate } from 'react-router-dom';\n\nconst HomeHead = function HomeHead(props) {\n    const navigate = useNavigate();\n\n    /* 计算时间中的月和日 */\n    let { today, info, queryUserInfoAsync } = props;\n    // useCallback缓存的是一个函数\n    // useCallback第一个参数是一个回调函数，useCallback会缓存这个函数，返回缓存的回调函数\n    // useCallback第二个参数是依赖项，只有当依赖项改变时，才会重新创建这个函数\n    // 例子：向子组件传递一个函数，在父组件每次re-render的时候，函数会重新创建新的，这会导致使用这个函数的子组件也re-render，但这是不必要的，可以用useCallback来解决。\n    // useMemo 缓存的是计算结果\n    // useMemo 第一个参数是一个函数，返回值用于产生保存值。 \n    // useMemo 第二个参数是一个数组，作为 dep 依赖项，数组里面的依赖项发生变化，重新执行第一个函数，产生新的值。\n    // 例子：减少不必要的 DOM 循环，限定当且仅当items改变的时候才更新此items，避免items重新循环\n    let time = useMemo(() => {\n        let [, month, day] = today.match(/^\\d{4}(\\d{2})(\\d{2})$/),\n            area = ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'];\n        return {\n            // 单元运算符 + 可以把数字字符串转换成数值\n            month: area[+month] + '月',\n            day\n        };\n    }, [today]);\n\n    // 第一次渲染完:如果info中没有信息,我们尝试派发一次,获取到登陆者信息\n    useEffect(() => {\n        if (!info) {\n            queryUserInfoAsync();\n        }\n    }, []);\n\n    return <header className=\"home-head-box\">\n        <div className=\"info\">\n            <div className=\"time\">\n                <span>{time.day}</span>\n                <span>{time.month}</span>\n            </div>\n            <h2 className=\"title\">知乎日报</h2>\n        </div>\n\n        <div className=\"picture\"\n            onClick={() => {\n                navigate('/personal');\n            }}>\n                {/* img路径不能直接写相对地址，因为渲染完路径会改变 */}\n            <img src={info ? info.pic : timg} alt=\"\" />\n        </div>\n    </header>;\n};\nexport default connect(\n    state => state.base,\n    // 一个对象，正好是{key:function}的形式，可以从props直接获取函数名\n    action.base\n)(HomeHead);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AACjD;AACA,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAO,iBAAiB;AACxB,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,MAAMC,QAAQ,GAAG,SAASA,QAAQ,CAACC,KAAK,EAAE;EAAA;EACtC,MAAMC,QAAQ,GAAGH,WAAW,EAAE;;EAE9B;EACA,IAAI;IAAEI,KAAK;IAAEC,IAAI;IAAEC;EAAmB,CAAC,GAAGJ,KAAK;EAC/C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIK,IAAI,GAAGZ,OAAO,CAAC,MAAM;IACrB,IAAI,GAAGa,KAAK,EAAEC,GAAG,CAAC,GAAGL,KAAK,CAACM,KAAK,CAAC,uBAAuB,CAAC;MACrDC,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;IAC9E,OAAO;MACH;MACAH,KAAK,EAAEG,IAAI,CAAC,CAACH,KAAK,CAAC,GAAG,GAAG;MACzBC;IACJ,CAAC;EACL,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;;EAEX;EACAR,SAAS,CAAC,MAAM;IACZ,IAAI,CAACS,IAAI,EAAE;MACPC,kBAAkB,EAAE;IACxB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO;IAAQ,SAAS,EAAC,eAAe;IAAA,wBACpC;MAAK,SAAS,EAAC,MAAM;MAAA,wBACjB;QAAK,SAAS,EAAC,MAAM;QAAA,wBACjB;UAAA,UAAOC,IAAI,CAACE;QAAG;UAAA;UAAA;UAAA;QAAA,QAAQ,eACvB;UAAA,UAAOF,IAAI,CAACC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACvB,eACN;QAAI,SAAS,EAAC,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7B,eAEN;MAAK,SAAS,EAAC,SAAS;MACpB,OAAO,EAAE,MAAM;QACXL,QAAQ,CAAC,WAAW,CAAC;MACzB,CAAE;MAAA,uBAEF;QAAK,GAAG,EAAEE,IAAI,GAAGA,IAAI,CAACO,GAAG,GAAGf,IAAK;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACzC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AACb,CAAC;AAAC,GA/CII,QAAQ;EAAA,QACOD,WAAW;AAAA;AAAA,KAD1BC,QAAQ;AAgDd,eAAeH,OAAO,CAClBe,KAAK,IAAIA,KAAK,CAACC,IAAI;AACnB;AACAf,MAAM,CAACe,IAAI,CACd,CAACb,QAAQ,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}